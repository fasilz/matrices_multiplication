package main

import (
	"testing"
)

var product [][]int

func BenchmarkMultiplyWithTranspose(b *testing.B) {

	var p [][]int
	x := [][]int{
		{2, 0, 3, 9, 5, 5, 5, 5, 5, 5}, {1, 1, 1, 5, 1, 1, 1, 1, 5, 1}, {3, 2, 2, 2, 2, 3, 2, 2, 2, 2},
	}

	y := [][]int{
		{1, 3, 3, 4, 5, 6, 7, 8, 9}, {1, 3, 3, 4, 5, 6, 7, 8, 9}, {1, 3, 3, 4, 5, 6, 7, 8, 9}, {1, 3, 3, 4, 5, 6, 7, 8, 9}, {1, 3, 3, 4, 5, 6, 7, 8, 9}, {1, 3, 3, 4, 5, 6, 7, 8, 9}, {1, 3, 3, 4, 5, 6, 7, 8, 9}, {1, 3, 3, 4, 5, 6, 7, 8, 9}, {1, 3, 3, 4, 5, 6, 7, 8, 9}, {1, 3, 3, 4, 5, 6, 7, 8, 9},
	}

	for i := 0; i < b.N; i++ {
		p, _ = multiplyWithTranspose(x, y)
	}

	product = p

}

func BenchmarkMultiply(b *testing.B) {

	var p [][]int
	x := [][]int{
		{2, 0, 3, 9, 5, 5, 5, 5, 5, 5}, {1, 1, 1, 5, 1, 1, 1, 1, 5, 1}, {3, 2, 2, 2, 2, 3, 2, 2, 2, 2},
	}

	y := [][]int{
		{1, 3, 3, 4, 5, 6, 7, 8, 9}, {1, 3, 3, 4, 5, 6, 7, 8, 9}, {1, 3, 3, 4, 5, 6, 7, 8, 9}, {1, 3, 3, 4, 5, 6, 7, 8, 9}, {1, 3, 3, 4, 5, 6, 7, 8, 9}, {1, 3, 3, 4, 5, 6, 7, 8, 9}, {1, 3, 3, 4, 5, 6, 7, 8, 9}, {1, 3, 3, 4, 5, 6, 7, 8, 9}, {1, 3, 3, 4, 5, 6, 7, 8, 9}, {1, 3, 3, 4, 5, 6, 7, 8, 9},
	}

	for i := 0; i < b.N; i++ {
		p, _ = Multiply(x, y)
	}

	product = p

}
